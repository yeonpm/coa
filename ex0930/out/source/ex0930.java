/* autogenerated by Processing revision 1293 on 2024-09-30 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class ex0930 extends PApplet {

float x,y,s,vx,vy,degreeX,degreeY,gravity;
public void setup(){
    /* size commented out by preprocessor */;
    x = y = 100;    s = 10;
    vx=0;
    vy=1;
    degreeX = 0.1f;
    degreeY = 0.1f;
    gravity=0.2f;
}
public void draw(){
    background(0,255,255);
    applyV();
    pinkyKirby(x, y, s);
}
public void mouseClicked(){
  x = mouseX;    y = mouseY;
}
public void mouseWheel(MouseEvent ee){
  float e = ee.getCount();
  if(e>0) s *= 1.1f;
  else if(e<0) s *= 0.9f;
}
public void keyPressed(){
  if(key == 'a') vx -= 5;
  else if(key == 'd') vx += 5;
  else if(key == 'w') vy -= 5;
  else if(key == 's') vy += 5;
//   else if(key == 'j') y += 5;
}

public void applyV() {
    if (vx > 0) vx = vx - degreeX;
    if (vx < 0) vx = vx + degreeX;
    if (vy > 0) vy = vy - degreeY;
    if (vy < 0) vy = vy + degreeY;
    vy = vy + gravity;
    x += vx;
    y += vy;
}
public void pinkyKirby(float x, float y, float scale, int kirbyColor = #FFB7C5) {
  stroke(0, 0, 0);
  
  // feet
  fill(164, 38, 28);  // Red color
  ellipse(x - 6*scale, y + 8*scale, 8*scale, 5*scale);  // Left foot
  ellipse(x + 6*scale, y + 8*scale, 8*scale, 5*scale);  // Right foot
  
  // arms
  fill(kirbyColor);  
  ellipse(x - 10*scale, y + 2*scale, 6*scale, 5*scale);  // Left arm
  ellipse(x + 10*scale, y + 2*scale, 6*scale, 5*scale);  // Right arm
  
  // body
  fill(kirbyColor);  
  circle(x, y, 20*scale);
  
  noStroke();
  
  // eyes
  fill(70, 0, 0);  // Black color eyes
  ellipse(x - 2.5f*scale, y - 3*scale, 2.7f*scale, 6*scale);  // Left eye outline
  ellipse(x + 2.5f*scale, y - 3*scale, 2.7f*scale, 6*scale);  // Right eye outline
  
  fill(63, 72, 204);  // Blue color eyes
  ellipse(x - 2.5f*scale, y - 3*scale, 2.2f*scale, 4.5f*scale);  // Left eye
  ellipse(x + 2.5f*scale, y - 3*scale, 2.2f*scale, 4.5f*scale);  // Right eye
  
  fill(70, 0, 0);  // Dark color eyes
  ellipse(x - 2.5f*scale, y - 3.5f*scale, 2.3f*scale, 3.5f*scale);  // Left eye
  ellipse(x + 2.5f*scale, y - 3.5f*scale, 2.3f*scale, 3.5f*scale);  // Right eye
  
  fill(255);  // White color eyes
  ellipse(x - 2.5f*scale, y - 4.5f*scale, 1.4f*scale, 2.2f*scale);  // Left eye
  ellipse(x + 2.5f*scale, y - 4.5f*scale, 1.4f*scale, 2.2f*scale);  // Right eye
  
  // cheeks
  fill(255, 105, 180);  // Pinkish color
  ellipse(x - 6.5f*scale, y - 1.0f*scale, 3.0f*scale, 2.3f*scale);  // Left cheek
  ellipse(x + 6.5f*scale, y - 1.0f*scale, 3.0f*scale, 2.3f*scale);  // Right cheek
  
  // mouth
  fill(153, 0, 0);  
  arc(x, y + 2*scale, 4*scale, 3*scale, 0, PI);
  fill(255, 99, 71); 
  arc(x, y + 2.5f*scale, 3*scale, 2*scale, 0, PI);
}

public void smile(float x, float y, float d){
  circle(x,y,d);  // face
  strokeWeight(3);
  circle(x-0.2f*d,y-0.1f*d,0.2f*d); // left eye
  noFill();
  arc(x+0.2f*d,y-0.1f*d,0.2f*d,0.2f*d,PI,2*PI); // right eye
  fill(255,0,0);
  noStroke();
  arc(x,y+0.1f*d,0.8f*d,0.4f*d,0,PI); // mouse
  fill(255);    // return to default state
  strokeWeight(1); // return to default state
  stroke(0);
}


  public void settings() { size(800, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "ex0930" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
